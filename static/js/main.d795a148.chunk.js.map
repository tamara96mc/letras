{"version":3,"sources":["components/Formulario.js","components/Cancion.js","components/Info.js","App.js","serviceWorker.js","index.js"],"names":["Formulario","guardarBusquedaLetra","useState","artista","cancion","busqueda","guardarBusqueda","error","guardarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","type","placeholder","onChange","Cancion","letra","length","Info","info","Object","keys","strArtistThumb","strGenre","strBiographyES","src","alt","href","strFacebook","rel","strTwitter","strLastFMChart","App","busquedaletra","guardarLetra","guardarInfo","useEffect","a","async","url","url2","Promise","all","axios","informacion","data","lyrics","artists","consultarApiLetra","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d795a148.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Formulario = ({guardarBusquedaLetra}) => {\r\n\r\n    const [busqueda, guardarBusqueda] = useState({\r\n        artista: '',\r\n        cancion: ''\r\n    });\r\n    const [ error, guardarError] = useState(false);\r\n\r\n    const { artista, cancion } = busqueda;\r\n\r\n    // función a cada input para leer su contenido\r\n    const actualizarState = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // consultar las apis\r\n    const buscarInformacion = e => {\r\n        e.preventDefault();\r\n\r\n        if(artista.trim() === '' || cancion.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        // Todo bien, pasar al componente principal\r\n\r\n        guardarBusquedaLetra(busqueda);\r\n    }\r\n\r\n    return ( \r\n        <div className=\"bg-info\">\r\n            { error ? <p className=\"alert alert-danger text-center p-2\">Todos los campos son obligatorios</p> : null}\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    \r\n                    <form \r\n                        onSubmit={buscarInformacion}\r\n                        className=\"col card text-white bg-transparent mb-5 pt-5 pb-2\"\r\n                    >\r\n                        <fieldset>\r\n                            <legend className=\"text-center\">Buscador Letras Canciones</legend>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Artista</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"artista\"\r\n                                            placeholder=\"Nombre Artista\"\r\n                                            onChange={actualizarState}\r\n                                            value={artista}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Canción</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"cancion\"\r\n                                            placeholder=\"Nombre Canción\"\r\n                                            onChange={actualizarState}\r\n                                            value={cancion}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-primary float-right\"\r\n                            >Buscar</button>\r\n                        </fieldset>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { Fragment } from 'react';\r\n\r\nconst Cancion = ({letra}) => {\r\n\r\n    if(letra.length === 0) return null;\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Letra Canción</h2>\r\n            <p className=\"letra\">{letra}</p>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Cancion;","import React from 'react';\r\n\r\nconst Info = ({info}) => {\r\n\r\n    if(Object.keys(info).length === 0 ) return null;\r\n\r\n    const { strArtistThumb, strGenre, strBiographyES } = info;\r\n    \r\n    return ( \r\n        <div className=\"card border-light\">\r\n            <div className=\"card-header bg-primary text-light font-weight-bold\">\r\n                Información Artista\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <img src={strArtistThumb} alt=\"Logo Artista\" />\r\n                <p className=\"card-text\">Género: {strGenre}</p>\r\n                <h2 className=\"card-text\">Biografía:</h2>\r\n                <p className=\"card-text\">{strBiographyES}</p>\r\n                <p className=\"card-text\">\r\n                    <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                    <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a href={`${info.strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-lastfm\"></i>\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Info;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Formulario from './components/Formulario';\r\nimport Cancion from './components/Cancion';\r\nimport Info from './components/Info';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n\r\n  // definir el state\r\n  const [ busquedaletra, guardarBusquedaLetra ] = useState({});\r\n  const [ letra, guardarLetra] = useState('');\r\n  const [info, guardarInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    if(Object.keys(busquedaletra).length === 0 ) return;\r\n\r\n    const consultarApiLetra = async () => {\r\n      const { artista, cancion } = busquedaletra;\r\n      const url = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\r\n      const url2 = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artista}`;\r\n\r\n      const [letra, informacion] = await Promise.all([\r\n        axios(url),\r\n        axios(url2)\r\n      ]);\r\n\r\n      guardarLetra(letra.data.lyrics);\r\n      guardarInfo(informacion.data.artists[0]);\r\n\r\n      // guardarLetra(resultado.data.lyrics);\r\n    }\r\n    consultarApiLetra();\r\n  }, [busquedaletra, info]);\r\n\r\n  return (\r\n      <Fragment>\r\n          <Formulario \r\n            guardarBusquedaLetra={guardarBusquedaLetra}\r\n          />\r\n\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <Info \r\n                  info={info}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                  <Cancion \r\n                    letra={letra}\r\n                  />\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}